name: build_recovery

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: '源代码地址(if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: '...请填写'
      MANIFEST_BRANCH:
        description: 'TWRP版本'
        required: true
        default: '...请填写'
      DEVICE_TREE_URL:
        description: '设备树地址'
        required: true
        default: '...请填写'
      DEVICE_TREE_BRANCH:
        description: '设备树分支'
        required: true
        default: '...请填写'
      DEVICE_PATH:
        description: '设备路径'
        required: true
        default: '例：device/asus/I003D'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: '设备代号'
        required: true
        default: '例：I003D'
      MAKEFILE_NAME:
        description: '重命名新的文件名'
        required: true
        default: '例：twrp_I003D'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recovery'
          
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04
    permissions:
       contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"
     
    - name: Check Out
      uses: actions/checkout@v3
    
    - name: clean up
      uses: rokibhasansagar/slimhub_actions@main
    
    - name: 设置环境
      run: |
        sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev libwxgtk3.0-dev
     
    - name: 更新软件库+配置环境
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev git
        
    - name: 安装JDK（Java）
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'
        
    - name: 设置SSH密钥
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}
              
    - name: 安装 repo（如果失败请换镜像源）
      run: |
        mkdir ~/bin
        curl https://mirrors.shanghaitech.edu.cn/git-repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
        
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "ypoqou"
        git config --global user.email "2390389322@qq.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd
      
    - name: 同步源代码.1
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace 
      
    - name: 下载设备树文件
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      
    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      
    - name: 同步源代码.2
      run: |
        bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
        repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags

      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true
      
    - name: 设置交换空间大小
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12
        
      
    - name: 创建recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make clean && make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}  
      
    - name: 上传至库
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: ${{ github.event.inputs.BUILD_TARGET }}.img
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
 


    
            

